// <auto-generated />
using System;
using Erm.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace erm.Migrations
{
    [DbContext(typeof(ErmDbContext))]
    [Migration("20240417095322_new7")]
    partial class new7
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Erm.Models.Issue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FindByWorker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("first Issue");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Issues");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a2811b09-b8b3-4b7f-b530-ef8e4351a5cc"),
                            EndDate = new DateTime(2024, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FindByWorker = "Find By Worker",
                            Name = "first Issue",
                            StartDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Erm.Models.MyTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AssignedTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("first");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MyTasks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2d6cf9ad-f054-46d5-bc45-74dcfd8fda2a"),
                            AssignedTo = "John Doe",
                            EndDate = new DateTime(2015, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "first task",
                            StartDate = new DateTime(2012, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Erm.Models.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("first");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Persons");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Person");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Erm.Models.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AssignedTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("first");

                    b.Property<string>("Risks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sprints")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("projects", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("bce8056e-ab00-4c47-82ed-431a60769a31"),
                            AssignedTo = "Scrum",
                            EndDate = new DateTime(2016, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "first Project",
                            Risks = "risks",
                            Sprints = "3",
                            StartDate = new DateTime(2012, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Erm.Models.Risk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Impact")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Probability")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Risk");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e29d18e8-7ee1-4db9-9e6a-92a96f460878"),
                            Description = "descriptionInContext",
                            Impact = 1,
                            Name = "firstRiskInContext",
                            Probability = 2
                        },
                        new
                        {
                            Id = new Guid("56e68e85-bdf7-4ede-b753-60a42a97521c"),
                            Description = "Description of first risk",
                            Impact = 3,
                            Name = "First Risk",
                            Probability = 2
                        },
                        new
                        {
                            Id = new Guid("53c15d26-72fa-4225-8c91-403680d846c6"),
                            Description = "Description of second risk",
                            Impact = 2,
                            Name = "Second Risk",
                            Probability = 1
                        });
                });

            modelBuilder.Entity("Erm.Models.Sprint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("first sprint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tasks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sprints");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dfaa20ac-6403-4b9c-ab1f-d81788088000"),
                            EndDate = new DateTime(2024, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "first Sprint",
                            StartDate = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Tasks = "tasks for sprint"
                        });
                });

            modelBuilder.Entity("Erm.Models.Worker", b =>
                {
                    b.HasBaseType("Erm.Models.Person");

                    b.Property<string>("Responsibility")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Worker");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a514b60b-4b69-4621-9cf0-f1089dbdb8ba"),
                            FirstName = "first",
                            LastName = "last",
                            Password = "123",
                            RefreshToken = "refresh_token_value",
                            Role = "admin",
                            Username = "maga",
                            Responsibility = "some_responsibility"
                        },
                        new
                        {
                            Id = new Guid("83bab1c0-06a8-4a2d-a0f2-18d98f4306ed"),
                            FirstName = "second",
                            LastName = "last1",
                            Password = "222",
                            RefreshToken = "refresh_token_value1",
                            Role = "editor",
                            Username = "baha",
                            Responsibility = "some_responsibility1"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
